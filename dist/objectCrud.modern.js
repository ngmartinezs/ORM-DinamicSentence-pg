const e=require("./connectionDB");module.exports=class{constructor(){this.connectionDB=new e}async consultar(e,n,t,o){try{const a=this.connectionDB.getConnection(),r=((e,n,t,o)=>{var a="SELECT ",r="",c=[];if(pMetaData&&o&&(e.forEach(e=>{0===contador?a+=e.nombre_columna:a=a+","+e.nombre_columna}),a=a+" FROM "+n+"."+t,Object.getOwnPropertyNames(o).forEach((e,n,t)=>{o[e]&&(0===r.length?(r=` ${r} WHERE ${e} = $lIndiceFiltro `,c.push(o[e])):(r=` ${filtro} AND ${e} = $lIndiceFiltro `,c.push(o[e])))}),0!==r.length&&c.length>0))return{name:"fetch-sql-meta-tables",text:`${a} ${r}`,values:c}})(await(async(e,n,t,o)=>{const a={name:"fetch-sql-meta-tables",text:"select column_name nombre_columna,\n                                  column_default valor_por_defecto,\n                                  ordinal_position orden,\n                                  data_type tipo_dato,\n                                  is_nullable es_nulable,\n                                  character_maximum_length longitud_char,\n                                  numeric_precision longitud_numerica,\n                                  numeric_precision_radix numero_decimales\n                          from information_schema.columns \n                          where table_catalog= $1 \n                          and table_schema = $2 \n                          and table_name = $3;",values:[n,t,o]};try{return await e.query(a),lRetorno}catch(e){throw e}})(a,e,n,t),n,t,o);if(r){const e=await a.query(r);return e?{CODIGO_RETORNO:0,MENSAJE_RETORNO:"OK",DATA:e.rows}:{CODIGO_RETORNO:1,MENSAJE_RETORNO:"No se encontro data",DATA:[]}}return{CODIGO_RETORNO:2,MENSAJE_RETORNO:"No se establecieron filtros de consulta correctos",DATA:[]}}catch(e){throw e}finally{await this.connectionDB.closeConnection()}}insertar(e,n,t,o){return{CODIGO_RETORNO:0,MENSAJE_RETORNO:"OK",DATA:{}}}update(e,n,t,o){return{CODIGO_RETORNO:0,MENSAJE_RETORNO:"OK",DATA:{}}}delete(e,n,t,o){return{CODIGO_RETORNO:0,MENSAJE_RETORNO:"OK",DATA:{}}}};
//# sourceMappingURL=objectCrud.modern.js.map
