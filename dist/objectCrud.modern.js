const e=require("./connectionDB"),o=async(e,o,t,a)=>{const n={name:"fetch-sql-meta-tables",text:"select column_name nombre_columna,\n                                  column_default valor_por_defecto,\n                                  ordinal_position orden,\n                                  data_type tipo_dato,\n                                  is_nullable es_nulable,\n                                  character_maximum_length longitud_char,\n                                  numeric_precision longitud_numerica,\n                                  numeric_precision_radix numero_decimales\n                          from information_schema.columns \n                          where table_catalog= $1 \n                          and table_schema = $2 \n                          and table_name = $3;",values:[o,t,a]};try{return(await e.query(n)).rows}catch(e){throw e}};module.exports=class{constructor(){}async consultar(t,a,n,r,c){var s=t;t||(s=(new e).getConnection());try{const e=((e,o,t,a)=>{var n="SELECT ",r=0,c="",s=[],l=1;if(e&&a&&(e.forEach(e=>{n=0==r?`${n} ${e.nombre_columna} `:` ${n} , ${e.nombre_columna}`,r++}),n=n+" FROM "+o+"."+t,Object.getOwnPropertyNames(a).forEach((e,o,t)=>{a[e]&&(0===c.length?(c=` ${c} WHERE ${e} = $${l} `,s.push(a[e])):(c=` ${c} AND ${e} = $${l} `,s.push(a[e])),l++)}),0!==c.length&&s.length>0))return{name:"fetch-sql-consulta-tables",text:`${n} ${c}`,values:s}})(await o(s,a,n,r),n,r,c);if(e){const o=await s.query(e);return o?{CODIGO_RETORNO:0,MENSAJE_RETORNO:"OK",DATA:o.rows}:{CODIGO_RETORNO:1,MENSAJE_RETORNO:"No se encontro data",DATA:[]}}return{CODIGO_RETORNO:2,MENSAJE_RETORNO:"No se establecieron filtros de consulta correctos",DATA:[]}}catch(e){throw e}finally{t&&await t.closeConnection()}}async insertar(t,a,n,r,c){var s=t,l=null;t||(s=(l=new e).getConnection());try{const e=await o(s,a.toLowerCase(),n.toLowerCase(),r.toLowerCase());if(e){const o=((e,o,t,a)=>{var n=`INSERT INTO ${o}.${t} (`,r=" VALUES (",c="",s=[],l=1,i=Math.floor(1001*Math.random());return e&&a?(e.forEach(e=>{e.valor_por_defecto?e.valor_por_defecto.toLowerCase().includes("nextval")||e.valor_por_defecto.toLowerCase().includes("seq")?c=e.nombre_columna:a[e.nombre_columna]&&(n=1===l?` ${n} ${e.nombre_columna} `:` ${n} , ${e.nombre_columna} `,r=1===l?` ${r} $${l} `:` ${r} , $${l} `,s.push(e.valor_por_defecto),l++):a[e.nombre_columna.toLowerCase()]||!e.tipo_dato.toLowerCase().includes("timestamp")&&!e.tipo_dato.toLowerCase().includes("date")?a[e.nombre_columna.toLowerCase()]&&(n=1===l?` ${n} ${e.nombre_columna} `:` ${n} , ${e.nombre_columna} `,r=1===l?` ${r} $${l} `:` ${r} , $${l} `,s.push(a[e.nombre_columna.toLowerCase()]),l++):(n=1===l?` ${n} ${e.nombre_columna} `:` ${n} , ${e.nombre_columna} `,r=1===l?` ${r} now() `:` ${r} , now() `)}),{name:"fetch-insert-"+i,text:`${n} ) ${r} )`+(c?`RETURNING ${c};`:";"),values:s}):{}})(e,n,r,c);if(o){const e=await s.query(o);if(e)return{CODIGO_RETORNO:0,MENSAJE_RETORNO:"OK",DATA:e.rows}}}}catch(e){throw e}finally{l&&await l.closeConnection()}return{CODIGO_RETORNO:3,MENSAJE_RETORNO:"No se insertaron datos",DATA:{}}}async update(t,a,n,r,c){var s=t,l=null;t||(s=(l=new e).getConnection());try{const e=await o(s,a.toLowerCase(),n.toLowerCase(),r.toLowerCase());if(e){const o=((e,o,t,a)=>{var n=`UPDATE ${o}.${t} SET `,r="",c="",s=[],l=1,i=Math.floor(1001*Math.random());return e&&a&&a.datosActulizar&&a.filtros?(e.forEach(e=>{if(a.datosActulizar[e.nombre_columna.toLowerCase()]&&(!e.valor_por_defecto||e.valor_por_defecto&&!e.valor_por_defecto.toLowerCase().includes("seq"))){let o=`${e.nombre_columna} = $${l}`;r=r?` ${r} , ${o} `:` ${o} `,s.push(a.datosActulizar[e.nombre_columna.toLowerCase()]),l++}}),Object.getOwnPropertyNames(a.filtros).forEach((e,o,t)=>{c=c?` AND ${e} = $${l} `:` WHERE  ${e} = $${l}  `,s.push(a.filtros[e]),l++}),{name:"fetch-sql-update-"+i,text:`${n} ${r} ${c};`,values:s}):{}})(e,n,r,c);if(o){const e=await s.query(o);if(e)return{CODIGO_RETORNO:0,MENSAJE_RETORNO:"OK",DATA:e.rowCount}}}}catch(e){throw e}finally{l&&await l.closeConnection()}return{CODIGO_RETORNO:4,MENSAJE_RETORNO:"No se realizaron actualizaciones",DATA:{}}}async delete(t,a,n,r,c){var s=t,l=null;t||(s=(l=new e).getConnection());try{const e=await o(s,a.toLowerCase(),n.toLowerCase(),r.toLowerCase());if(e){const o=((e,o,t,a)=>{var n=`DELETE FROM ${o}.${t} `,r="",c=[],s=1,l=Math.floor(1001*Math.random());return e&&a?(Object.getOwnPropertyNames(a).forEach((o,t,n)=>{if(e.find(e=>e.nombre_columna.toLowerCase()===o.toLowerCase())){let e=` ${o} = $${s} `;r=r?` AND ${o} = $${s} `:` WHERE ${e} `,c.push(a[o]),s++}}),{name:"fetch-sql-delete-"+l,text:`${n} ${r};`,values:c}):{}})(e,n,r,c);if(o.values.length>0){const e=await s.query(o);if(e&&e)return{CODIGO_RETORNO:0,MENSAJE_RETORNO:"OK",DATA:e.rowCount}}}}catch(e){throw e}finally{l&&await l.closeConnection()}return{CODIGO_RETORNO:5,MENSAJE_RETORNO:"No se eliminaron registros",DATA:{}}}};
//# sourceMappingURL=objectCrud.modern.js.map
