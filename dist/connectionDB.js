var t=require("pg"),n=t.Pool,e=t.Client,o=require("./configDB").configDB;module.exports=function(){function t(t){"Client"===t?(this.typeConnection="Client",this.connection=new e({user:o.dbUser,host:o.dbHost,database:o.dbName,password:o.dbPassword,port:o.dbPort,"statement_timeout?":o.statement_timeout,"query_timeout?":o.query_timeout,"connectionTimeoutMillis?":o.connectionTimeoutMillis}),this.connection.connect()):(this.typeConnection="Pool",this.connection=new n({user:o.dbUser,host:o.dbHost,database:o.dbName,password:o.dbPassword,port:o.dbPort,"statement_timeout?":o.statement_timeout,"query_timeout?":o.query_timeout,"connectionTimeoutMillis?":o.connectionTimeoutMillis}))}var i=t.prototype;return i.getConnection=function(){return this.connection},i.closeConnection=function(){try{var t=this,n=function(){if(t.connection)return Promise.resolve(t.connection.end()).then(function(){})}();return Promise.resolve(n&&n.then?n.then(function(){}):void 0)}catch(t){return Promise.reject(t)}},i.beginTransaction=function(){try{var t=this;return Promise.resolve(function(){if("Client"===t.typeConnection)return Promise.resolve(t.connection.query("BEGIN")).then(function(){});throw"No es valida iniciar trasacction sobre tipo de conneccion Pool"}())}catch(t){return Promise.reject(t)}},i.commitTransaction=function(){try{var t=this;return Promise.resolve(function(){if("Client"===t.typeConnection)return Promise.resolve(t.connection.query("COMMIT")).then(function(){});throw"No es valida iniciar trasacction sobre tipo de conneccion Pool"}())}catch(t){return Promise.reject(t)}},i.rollBackTransaction=function(){try{var t=this;return Promise.resolve(function(){if("Client"===t.typeConnection)return Promise.resolve(t.connection.query("ROLLBACK")).then(function(){});throw"No es valida iniciar trasacction sobre tipo de conneccion Pool"}())}catch(t){return Promise.reject(t)}},t}();
//# sourceMappingURL=connectionDB.js.map
