{"version":3,"file":"connectionDB.modern.js","sources":["../src/connectionDB.js"],"sourcesContent":["const { Pool, Client } = require(\"pg\");\nconst { configDB } = require(\"./configDB\");\n\nclass ConneectionDB {\n  constructor(pTipo) {\n    if (pTipo === \"Client\") {\n      this.typeConnection = \"Client\";\n      this.connection = new Client({\n        user: configDB.dbUser,\n        host: configDB.dbHost,\n        database: configDB.dbName,\n        password: configDB.dbPassword,\n        port: configDB.dbPort,\n        \"statement_timeout?\": configDB.statement_timeout,\n        \"query_timeout?\": configDB.query_timeout,\n        \"connectionTimeoutMillis?\": configDB.connectionTimeoutMillis,\n      });\n      this.connection.connect();\n    } else {\n      this.typeConnection = \"Pool\";\n      this.connection = new Pool({\n        user: configDB.dbUser,\n        host: configDB.dbHost,\n        database: configDB.dbName,\n        password: configDB.dbPassword,\n        port: configDB.dbPort,\n        \"statement_timeout?\": configDB.statement_timeout,\n        \"query_timeout?\": configDB.query_timeout,\n        \"connectionTimeoutMillis?\": configDB.connectionTimeoutMillis,\n      });\n    }\n  }\n\n  getConnection() {\n    return this.connection;\n  }\n\n  async closeConnection() {\n    if (this.connection) await this.connection.end();\n  }\n\n  async beginTransaction() {\n    if (this.typeConnection === \"Client\") {\n      await this.connection.query(\"BEGIN\");\n    } else {\n      throw \"No es valida iniciar trasacction sobre tipo de conneccion Pool\";\n    }\n  }\n\n  async commitTransaction() {\n    if (this.typeConnection === \"Client\") {\n      await this.connection.query(\"COMMIT\");\n    } else {\n      throw \"No es valida iniciar trasacction sobre tipo de conneccion Pool\";\n    }\n  }\n\n  async rollBackTransaction() {\n    if (this.typeConnection === \"Client\") {\n      await this.connection.query(\"ROLLBACK\");\n    } else {\n      throw \"No es valida iniciar trasacction sobre tipo de conneccion Pool\";\n    }\n  }\n}\n\nmodule.exports = ConneectionDB;\n"],"names":["Pool","Client","require","configDB","module","exports","constructor","pTipo","this","typeConnection","connection","user","dbUser","host","dbHost","database","dbName","password","dbPassword","port","dbPort","statement_timeout?","statement_timeout","query_timeout?","query_timeout","connectionTimeoutMillis?","connectionTimeoutMillis","connect","getConnection","[object Object]","end","query"],"mappings":"AAAA,MAAMA,KAAEA,EAAFC,OAAQA,GAAWC,QAAQ,OAC3BC,SAAEA,GAAaD,QAAQ,cAiE7BE,OAAOC,QA/DP,MACEC,YAAYC,GACI,WAAVA,GACFC,KAAKC,eAAiB,SACtBD,KAAKE,WAAa,IAAIT,EAAO,CAC3BU,KAAMR,EAASS,OACfC,KAAMV,EAASW,OACfC,SAAUZ,EAASa,OACnBC,SAAUd,EAASe,WACnBC,KAAMhB,EAASiB,OACfC,qBAAsBlB,EAASmB,kBAC/BC,iBAAkBpB,EAASqB,cAC3BC,2BAA4BtB,EAASuB,0BAEvClB,KAAKE,WAAWiB,YAEhBnB,KAAKC,eAAiB,OACtBD,KAAKE,WAAa,IAAIV,EAAK,CACzBW,KAAMR,EAASS,OACfC,KAAMV,EAASW,OACfC,SAAUZ,EAASa,OACnBC,SAAUd,EAASe,WACnBC,KAAMhB,EAASiB,OACfC,qBAAsBlB,EAASmB,kBAC/BC,iBAAkBpB,EAASqB,cAC3BC,2BAA4BtB,EAASuB,2BAK3CE,gBACE,YAAYlB,WAGdmB,wBACMrB,KAAKE,uBAAuBA,WAAWoB,MAG7CD,yBACE,GAA4B,WAAxBrB,KAAKC,eAGP,KAAM,4EAFKC,WAAWqB,MAAM,SAMhCF,0BACE,GAA4B,WAAxBrB,KAAKC,eAGP,KAAM,4EAFKC,WAAWqB,MAAM,UAMhCF,4BACE,GAA4B,WAAxBrB,KAAKC,eAGP,KAAM,4EAFKC,WAAWqB,MAAM"}