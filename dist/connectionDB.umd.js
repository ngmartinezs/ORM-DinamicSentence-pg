!function(n){"function"==typeof define&&define.amd?define(n):n()}(function(){var n=require("pg"),t=n.Pool,e=n.Client,o=require("./configDB").configDB;module.exports=function(){function n(n){"Client"===n?(this.typeConnection="Client",this.connection=new e({user:o.dbUser,host:o.dbHost,database:o.dbName,password:o.dbPassword,port:o.dbPort,"statement_timeout?":o.statement_timeout,"query_timeout?":o.query_timeout,"connectionTimeoutMillis?":o.connectionTimeoutMillis}),this.connection.connect()):(this.typeConnection="Pool",this.connection=new t({user:o.dbUser,host:o.dbHost,database:o.dbName,password:o.dbPassword,port:o.dbPort,"statement_timeout?":o.statement_timeout,"query_timeout?":o.query_timeout,"connectionTimeoutMillis?":o.connectionTimeoutMillis}))}var i=n.prototype;return i.getConnection=function(){return this.connection},i.closeConnection=function(){try{var n=this,t=function(){if(n.connection)return Promise.resolve(n.connection.end()).then(function(){})}();return Promise.resolve(t&&t.then?t.then(function(){}):void 0)}catch(n){return Promise.reject(n)}},i.beginTransaction=function(){try{var n=this;return Promise.resolve(function(){if("Client"===n.typeConnection)return Promise.resolve(n.connection.query("BEGIN")).then(function(){});throw"No es valida iniciar trasacction sobre tipo de conneccion Pool"}())}catch(n){return Promise.reject(n)}},i.commitTransaction=function(){try{var n=this;return Promise.resolve(function(){if("Client"===n.typeConnection)return Promise.resolve(n.connection.query("COMMIT")).then(function(){});throw"No es valida iniciar trasacction sobre tipo de conneccion Pool"}())}catch(n){return Promise.reject(n)}},i.rollBackTransaction=function(){try{var n=this;return Promise.resolve(function(){if("Client"===n.typeConnection)return Promise.resolve(n.connection.query("ROLLBACK")).then(function(){});throw"No es valida iniciar trasacction sobre tipo de conneccion Pool"}())}catch(n){return Promise.reject(n)}},n}()});
//# sourceMappingURL=connectionDB.umd.js.map
