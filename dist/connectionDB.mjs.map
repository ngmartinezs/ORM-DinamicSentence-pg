{"version":3,"file":"connectionDB.mjs","sources":["../src/connectionDB.js"],"sourcesContent":["const { Pool, Client } = require(\"pg\");\nconst { configDB } = require(\"./configDB\");\n\nclass ConneectionDB {\n  constructor(pTipo) {\n    if (pTipo === \"Client\") {\n      this.typeConnection = \"Client\";\n      this.connection = new Client({\n        user: configDB.dbUser,\n        host: configDB.dbHost,\n        database: configDB.dbName,\n        password: configDB.dbPassword,\n        port: configDB.dbPort,\n        \"statement_timeout?\": configDB.statement_timeout,\n        \"query_timeout?\": configDB.query_timeout,\n        \"connectionTimeoutMillis?\": configDB.connectionTimeoutMillis,\n      });\n      this.connection.connect();\n    } else {\n      this.typeConnection = \"Pool\";\n      this.connection = new Pool({\n        user: configDB.dbUser,\n        host: configDB.dbHost,\n        database: configDB.dbName,\n        password: configDB.dbPassword,\n        port: configDB.dbPort,\n        \"statement_timeout?\": configDB.statement_timeout,\n        \"query_timeout?\": configDB.query_timeout,\n        \"connectionTimeoutMillis?\": configDB.connectionTimeoutMillis,\n      });\n    }\n  }\n\n  getConnection() {\n    return this.connection;\n  }\n\n  async closeConnection() {\n    if (this.connection) await this.connection.end();\n  }\n\n  async beginTransaction() {\n    if (this.typeConnection === \"Client\") {\n      await this.connection.query(\"BEGIN\");\n    } else {\n      throw \"No es valida iniciar trasacction sobre tipo de conneccion Pool\";\n    }\n  }\n\n  async commitTransaction() {\n    if (this.typeConnection === \"Client\") {\n      await this.connection.query(\"COMMIT\");\n    } else {\n      throw \"No es valida iniciar trasacction sobre tipo de conneccion Pool\";\n    }\n  }\n\n  async rollBackTransaction() {\n    if (this.typeConnection === \"Client\") {\n      await this.connection.query(\"ROLLBACK\");\n    } else {\n      throw \"No es valida iniciar trasacction sobre tipo de conneccion Pool\";\n    }\n  }\n}\n\nmodule.exports = ConneectionDB;\n"],"names":["require","Pool","Client","configDB","module","exports","pTipo","this","typeConnection","connection","user","dbUser","host","dbHost","database","dbName","password","dbPassword","port","dbPort","statement_timeout?","statement_timeout","query_timeout?","query_timeout","connectionTimeoutMillis?","connectionTimeoutMillis","connect","getConnection","closeConnection","_this2","end","beginTransaction","_this4","query","commitTransaction","_this6","rollBackTransaction","_this8"],"mappings":"MAAyBA,QAAQ,MAAzBC,IAAAA,KAAMC,IAAAA,OACNC,EAAaH,QAAQ,cAArBG,SAiERC,OAAOC,mBA9DL,WAAYC,GACI,WAAVA,GACFC,KAAKC,eAAiB,SACtBD,KAAKE,WAAa,IAAIP,EAAO,CAC3BQ,KAAMP,EAASQ,OACfC,KAAMT,EAASU,OACfC,SAAUX,EAASY,OACnBC,SAAUb,EAASc,WACnBC,KAAMf,EAASgB,OACfC,qBAAsBjB,EAASkB,kBAC/BC,iBAAkBnB,EAASoB,cAC3BC,2BAA4BrB,EAASsB,0BAEvClB,KAAKE,WAAWiB,YAEhBnB,KAAKC,eAAiB,OACtBD,KAAKE,WAAa,IAAIR,EAAK,CACzBS,KAAMP,EAASQ,OACfC,KAAMT,EAASU,OACfC,SAAUX,EAASY,OACnBC,SAAUb,EAASc,WACnBC,KAAMf,EAASgB,OACfC,qBAAsBjB,EAASkB,kBAC/BC,iBAAkBnB,EAASoB,cAC3BC,2BAA4BrB,EAASsB,sDAK3CE,cAAA,WACE,YAAYlB,cAGRmB,qCACArB,kBAAJ,GAAIsB,EAAKpB,kCAAkBoB,EAAKpB,WAAWqB,iIAGvCC,sCACAxB,0CAAwB,WAAxByB,EAAKxB,sCACDwB,EAAKvB,WAAWwB,MAAM,6BAE5B,KAAM,2GAIJC,uCACA3B,0CAAwB,WAAxB4B,EAAK3B,sCACD2B,EAAK1B,WAAWwB,MAAM,8BAE5B,KAAM,2GAIJG,yCACA7B,0CAAwB,WAAxB8B,EAAK7B,sCACD6B,EAAK5B,WAAWwB,MAAM,gCAE5B,KAAM"}