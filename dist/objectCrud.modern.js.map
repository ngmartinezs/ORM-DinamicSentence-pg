{"version":3,"file":"objectCrud.modern.js","sources":["../src/objectCrud.js"],"sourcesContent":["const ConnectionDB = require(\"./connectionDB\");\n\nconst obtenerMetaDataTabla = async (\n  pConnection,\n  pBaseDatos,\n  pEsquema,\n  pEntidad\n) => {\n  const META_SQL_TABLES = `select column_name nombre_columna,\n                                  column_default valor_por_defecto,\n                                  ordinal_position orden,\n                                  data_type tipo_dato,\n                                  is_nullable es_nulable,\n                                  character_maximum_length longitud_char,\n                                  numeric_precision longitud_numerica,\n                                  numeric_precision_radix numero_decimales\n                          from information_schema.columns \n                          where table_catalog= $1 \n                          and table_schema = $2 \n                          and table_name = $3;`;\n\n  const query = {\n    name: \"fetch-sql-meta-tables\",\n    text: META_SQL_TABLES,\n    values: [pBaseDatos, pEsquema, pEntidad],\n  };\n\n  try {\n    const lRetono = await pConnection.query(query);\n    return lRetorno;\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst generarSQLConsulta = (pMetaDataArray, pEsquema, pEntidad, pFiltro) => {\n  var lSQL = `SELECT `;\n  var lContador = 0;\n  var lFiltro = ``;\n  var lArrayValues = [];\n  var lIndiceFiltro = 1;\n\n  if (pMetaData && pFiltro) {\n    /**\n     * Se genera SQL general de la consulta.\n     **/\n    pMetaDataArray.forEach((element) => {\n      if (contador === 0) lSQL = lSQL + element.nombre_columna;\n      else lSQL = lSQL + \",\" + element.nombre_columna;\n    });\n\n    lSQL = lSQL + \" FROM \" + pEsquema + \".\" + pEntidad;\n\n    /**\n     * Se genera los filtros.\n     **/\n    Object.getOwnPropertyNames(pFiltro).forEach((value, idx, array) => {\n      if (pFiltro[value]) {\n        if (lFiltro.length === 0) {\n          lFiltro = ` ${lFiltro} WHERE ${value} = $lIndiceFiltro `;\n          lArrayValues.push(pFiltro[value]);\n        } else {\n          lFiltro = ` ${filtro} AND ${value} = $lIndiceFiltro `;\n          lArrayValues.push(pFiltro[value]);\n        }\n\n        lIndiceFiltro++;\n      }\n    });\n\n    if (lFiltro.length !== 0 && lArrayValues.length > 0)\n      return {\n        name: \"fetch-sql-meta-tables\",\n        text: `${lSQL} ${lFiltro}`,\n        values: lArrayValues,\n      };\n  }\n};\n\nclass ObjectsCrud {\n  constructor() {\n    this.connectionDB = new ConnectionDB();\n  }\n\n  async consultar(pBaseDatos, pEsquema, pEntidad, pFiltro) {\n    try {\n      const lConnection = this.connectionDB.getConnection();\n      const lMetaDataTabla = await obtenerMetaDataTabla(\n        lConnection,\n        pBaseDatos,\n        pEsquema,\n        pEntidad\n      );\n\n      const lSQLConsulta = generarSQLConsulta(\n        lMetaDataTabla,\n        pEsquema,\n        pEntidad,\n        pFiltro\n      );\n\n      if (lSQLConsulta) {\n        const lResultado = await lConnection.query(lSQLConsulta);\n\n        if (lResultado)\n          return {\n            CODIGO_RETORNO: 0,\n            MENSAJE_RETORNO: \"OK\",\n            DATA: lResultado.rows,\n          };\n        else\n          return {\n            CODIGO_RETORNO: 1,\n            MENSAJE_RETORNO: \"No se encontro data\",\n            DATA: [],\n          };\n      } else\n        return {\n          CODIGO_RETORNO: 2,\n          MENSAJE_RETORNO: \"No se establecieron filtros de consulta correctos\",\n          DATA: [],\n        };\n    } catch (error) {\n      throw error;\n    } finally {\n      await this.connectionDB.closeConnection();\n    }\n  }\n\n  insertar(pBaseDatos, pEsquema, pEntidad, pDatos) {\n    return {\n      CODIGO_RETORNO: 0,\n      MENSAJE_RETORNO: \"OK\",\n      DATA: {},\n    };\n  }\n\n  update(pBaseDatos, pEsquema, pEntidad, pDatos) {\n    return {\n      CODIGO_RETORNO: 0,\n      MENSAJE_RETORNO: \"OK\",\n      DATA: {},\n    };\n  }\n\n  delete(pBaseDatos, pEsquema, pEntidad, pDatos) {\n    return {\n      CODIGO_RETORNO: 0,\n      MENSAJE_RETORNO: \"OK\",\n      DATA: {},\n    };\n  }\n}\n\nmodule.exports = ObjectsCrud;\n"],"names":["ConnectionDB","require","module","exports","constructor","this","connectionDB","[object Object]","pBaseDatos","pEsquema","pEntidad","pFiltro","lConnection","getConnection","lSQLConsulta","pMetaDataArray","lSQL","lFiltro","lArrayValues","pMetaData","forEach","element","contador","nombre_columna","Object","getOwnPropertyNames","value","idx","array","length","push","filtro","name","text","values","generarSQLConsulta","async","pConnection","query","lRetorno","error","obtenerMetaDataTabla","lResultado","CODIGO_RETORNO","MENSAJE_RETORNO","DATA","rows","closeConnection","insertar","pDatos","update","delete"],"mappings":"AAAA,MAAMA,EAAeC,QAAQ,kBA0J7BC,OAAOC,QA3EP,MACEC,cACEC,KAAKC,aAAe,IAAIN,EAG1BO,gBAAgBC,EAAYC,EAAUC,EAAUC,GAC9C,IACE,MAAMC,EAAcP,KAAKC,aAAaO,gBAQhCC,EA3De,EAACC,EAAgBN,EAAUC,EAAUC,KAC9D,IAAIK,EAAQ,UAERC,EAAW,GACXC,EAAe,GAGnB,GAAIC,WAAaR,IAIfI,EAAeK,QAASC,IACL,IAAbC,SAAgBN,GAAcK,EAAQE,eACrCP,EAAOA,EAAO,IAAMK,EAAQE,iBAGnCP,EAAOA,EAAO,SAAWP,EAAW,IAAMC,EAK1Cc,OAAOC,oBAAoBd,GAASS,QAAQ,CAACM,EAAOC,EAAKC,KACnDjB,EAAQe,KACa,IAAnBT,EAAQY,QACVZ,EAAW,IAAGA,WAAiBS,sBAC/BR,EAAaY,KAAKnB,EAAQe,MAE1BT,EAAW,IAAGc,cAAcL,sBAC5BR,EAAaY,KAAKnB,EAAQe,QAOT,IAAnBT,EAAQY,QAAgBX,EAAaW,OAAS,GAChD,MAAO,CACLG,KAAM,wBACNC,KAAO,GAAEjB,KAAQC,IACjBiB,OAAQhB,IAoBWiB,MA5FEC,OAC3BC,EACA7B,EACAC,EACAC,KAEA,MAaM4B,EAAQ,CACZN,KAAM,wBACNC,KAfuB,ysBAgBvBC,OAAQ,CAAC1B,EAAYC,EAAUC,IAGjC,IAEE,aADsB2B,EAAYC,MAAMA,GACjCC,SACP,MAAOC,GACP,MAAMA,IAwDyBC,CAC3B7B,EACAJ,EACAC,EACAC,GAKAD,EACAC,EACAC,GAGF,GAAIG,EAAc,CAChB,MAAM4B,QAAmB9B,EAAY0B,MAAMxB,GAE3C,OAAI4B,EACK,CACLC,eAAgB,EAChBC,gBAAiB,KACjBC,KAAMH,EAAWI,MAGZ,CACLH,eAAgB,EAChBC,gBAAiB,sBACjBC,KAAM,UAGH,CACLF,eAAgB,EAChBC,gBAAiB,oDACjBC,KAAM,IAEV,MAAOL,GACP,MAAMA,EAtCR,mBAwCalC,aAAayC,mBAI5BC,SAASxC,EAAYC,EAAUC,EAAUuC,GACvC,MAAO,CACLN,eAAgB,EAChBC,gBAAiB,KACjBC,KAAM,IAIVK,OAAO1C,EAAYC,EAAUC,EAAUuC,GACrC,MAAO,CACLN,eAAgB,EAChBC,gBAAiB,KACjBC,KAAM,IAIVM,OAAO3C,EAAYC,EAAUC,EAAUuC,GACrC,MAAO,CACLN,eAAgB,EAChBC,gBAAiB,KACjBC,KAAM"}